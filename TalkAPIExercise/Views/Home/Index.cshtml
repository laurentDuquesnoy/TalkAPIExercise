@using Microsoft.CodeAnalysis.CSharp.Syntax
@using Microsoft.AspNetCore.Identity;
@using TalkAPIExercise.Model
@using System.Security.Claims
@model ChatModel
@inject  SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "Home Page";
    var channelName = string.IsNullOrWhiteSpace(Model.SelectedChannel) ? "" : " - " + Model.SelectedChannel;
}
@if (SignInManager.IsSignedIn(User))
{
    <div class="main__container">
        <h1 class="main__title">Chat @channelName</h1>
        <div class="main__wrapper">
            <div class="contacts--window-wrapper">
            @foreach (ChannelModel channel in Model.Channels)
                    {
                        <a asp-controller="Home" asp-action="Channel_click" class="noStyle" asp-route-channelName="@channel.Name">
                            <div class="channel__wrapper" >
                                <div class="channel__picture--wrapper">
                                    <img src="~/assets/account--circle.svg" alt="channel picture"/>
                                </div>
                                <div class="channel__text--wrapper">
                                    <p>@channel.Name</p>
                                </div>
                            </div>    
                        </a>
                    }
            </div>
            <div class="chat--window-wrapper">
                @if (String.IsNullOrWhiteSpace(Model.SelectedChannel))
                {
                    <div class="default__chatWindow">
                        <p class="default__message">Select a channel to view its messages</p>
                    </div>
                }
                else
                {
                    <form method="post" class="message__form--wrapper">
                        <input type="text" class="message__form--field" asp-for="@Model.MessageContent"/>
                        <input type="hidden" class="hidden" asp-for="@Model.SelectedChannel"/>
                        <button type="submit" asp-action="Index">Send</button>
                    </form>
                    <div class="messages__wrapper">
                        @foreach (MessageModel message in Model.Messages)
                        {
                            var sender = message.Author == User.FindFirst(ClaimTypes.Email).Value ? "right" : "left";
                            <div class="message__wrapper @sender ">
                                <p class="message__info">@message.Author - @message.CreatedAt.ToShortTimeString()</p>
                                <p class="message__body">@message.Message</p>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
}
else
{
    <div class="container__nologin">
        <h1>Please login to access features</h1>
    </div>
}